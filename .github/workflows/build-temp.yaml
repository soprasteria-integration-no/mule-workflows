name: Reusable Mule Pipeline Build Template

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
        description: Environment to deploy to in Runtime Manager
      mule-env:
        required: true
        type: string
        description: Mule environment to use, this is used for config file and naming for app name
      config-key:
        required: true
        type: string
        description: Config key for decrypting env secure values
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Extract Properties
      run: |
        VENV = ${{ inputs.mule-env }}
        echo "CONFIG_KEY=${{ secrets.config_key_$VENV }}" >> $GITHUB_ENV
        echo "properties=$(yq eval ".${{ inputs.env }}" "properties.yml")" >> $GITHUB_ENV
      shell: bash
    - name: Deploy to ${{ inputs.env }}
      env:
        CLIENT_ID: ${{ secrets.anypoint_client_id }}
        CLIENT_SECRET: ${{ secrets.anypoint_client_secret }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DskipMunitTests -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.client_id="$CLIENT_ID" \
         -Danypoint.client_secret="$CLIENT_SECRET" \
         -Denv=${{ inputs.env }} \
         -Dmule-env=${{ inputs.mule-env }} \
         -Dconfig-key=${{ inputs.config-key }} \
         ${{ env.properties }} \
